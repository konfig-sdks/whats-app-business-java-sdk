/*
 * WhatsApp Business API
 * See https://developers.facebook.com/docs/whatsapp
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateUserRequestBody;
import com.konfigthis.client.model.DetailedUserResponse;
import com.konfigthis.client.model.LoginAdminRequestBody;
import com.konfigthis.client.model.UpdateUserRequestBody;
import com.konfigthis.client.model.UserLoginResponse;
import com.konfigthis.client.model.UserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private static UsersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UsersApi(apiClient);
    }

    /**
     * Create-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        String password = null;
        String username = null;
        UserResponse response = api.createUser(password, username)
                .execute();
        // TODO: test validations
    }

    /**
     * Get-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByUsernameTest() throws ApiException {
        String userUsername = null;
        DetailedUserResponse response = api.getByUsername(userUsername)
                .execute();
        // TODO: test validations
    }

    /**
     * Login-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void performLoginTest() throws ApiException {
        String newPassword = null;
        UserLoginResponse response = api.performLogin(newPassword)
                .execute();
        // TODO: test validations
    }

    /**
     * Logout-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void performLogoutTest() throws ApiException {
        api.performLogout()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUserTest() throws ApiException {
        String userUsername = null;
        UserResponse response = api.removeUser(userUsername)
                .execute();
        // TODO: test validations
    }

    /**
     * Update-User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String password = null;
        String userUsername = null;
        UserResponse response = api.updateUser(password, userUsername)
                .execute();
        // TODO: test validations
    }

}
